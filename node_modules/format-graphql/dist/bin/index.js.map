{"version":3,"sources":["../../src/bin/index.js"],"names":["argv","yargs","env","help","usage","command","positional","description","type","options","default","write","parse","resolvedPath","path","resolve","sdlPath","inputSdl","fs","readFileSync","sortArguments","sortDefinitions","sortFields","outputSdl","writeFileSync","console","log"],"mappings":"AAAA;;;AAIA;;AACA;;AACA;;AACA;;;;AAIA,MAAMA,IAAI,GAAGC,eACVC,GADU,CACN,IADM,EAEVC,IAFU,GAGVC,KAHU,CAGJ,eAHI,EAGa,yDAHb,EAGyEC,OAAD,IAAa;AAC9FA,EAAAA,OAAO,CAACC,UAAR,CAAmB,UAAnB,EAA+B;AAC7BC,IAAAA,WAAW,EAAE,uDADgB;AAE7BC,IAAAA,IAAI,EAAE;AAFuB,GAA/B;AAID,CARU,EASVC,OATU,CASF;AACP,oBAAkB;AAChBC,IAAAA,OAAO,EAAE,IADO;AAEhBH,IAAAA,WAAW,EAAE,mBAFG;AAGhBC,IAAAA,IAAI,EAAE;AAHU,GADX;AAMP,sBAAoB;AAClBE,IAAAA,OAAO,EAAE,IADS;AAElBH,IAAAA,WAAW,EAAE,qBAFK;AAGlBC,IAAAA,IAAI,EAAE;AAHY,GANb;AAWP,iBAAe;AACbE,IAAAA,OAAO,EAAE,IADI;AAEbH,IAAAA,WAAW,EAAE,gBAFA;AAGbC,IAAAA,IAAI,EAAE;AAHO,GAXR;AAgBPG,EAAAA,KAAK,EAAE;AACLD,IAAAA,OAAO,EAAE,KADJ;AAELH,IAAAA,WAAW,EAAE,yCAFR;AAGLC,IAAAA,IAAI,EAAE;AAHD;AAhBA,CATE,EA+BVI,KA/BU,EAAb;;AAiCA,MAAMC,YAAY,GAAGC,cAAKC,OAAL,CAAaf,IAAI,CAACgB,OAAlB,CAArB;;AAEA,MAAMC,QAAQ,GAAGC,YAAGC,YAAH,CAAgBN,YAAhB,EAA8B,MAA9B,CAAjB;;AAEA,MAAM;AACJF,EAAAA,KADI;AAEJS,EAAAA,aAFI;AAGJC,EAAAA,eAHI;AAIJC,EAAAA;AAJI,IAKFtB,IALJ;AAOA,MAAMuB,SAAS,GAAG,0BAAUN,QAAV,EAAoB;AACpCG,EAAAA,aADoC;AAEpCC,EAAAA,eAFoC;AAGpCC,EAAAA;AAHoC,CAApB,CAAlB;;AAMA,IAAIX,KAAJ,EAAW;AACTO,cAAGM,aAAH,CAAiBX,YAAjB,EAA+BU,SAA/B,EADS,CAGT;;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,gEAAZ;AACD,CALD,MAKO;AACL;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACD","sourcesContent":["#!/usr/bin/env node\n\n// @flow\n\nimport fs from 'fs';\nimport path from 'path';\nimport yargs from 'yargs';\nimport {\n  formatSdl,\n} from '../utilities';\n\nconst argv = yargs\n  .env('FG')\n  .help()\n  .usage('$0 <sdl-path>', 'Sort GraphQL schema definition language (SDL) document.', (command) => {\n    command.positional('sdl-path', {\n      description: 'Path to the GraphQL schema definition (SDL) document.',\n      type: 'string',\n    });\n  })\n  .options({\n    'sort-arguments': {\n      default: true,\n      description: 'Sort on arguments',\n      type: 'boolean',\n    },\n    'sort-definitions': {\n      default: true,\n      description: 'Sort on definitions',\n      type: 'boolean',\n    },\n    'sort-fields': {\n      default: true,\n      description: 'Sort on fields',\n      type: 'boolean',\n    },\n    write: {\n      default: false,\n      description: 'Overrides contents of the SDL document.',\n      type: 'boolean',\n    },\n  })\n  .parse();\n\nconst resolvedPath = path.resolve(argv.sdlPath);\n\nconst inputSdl = fs.readFileSync(resolvedPath, 'utf8');\n\nconst {\n  write,\n  sortArguments,\n  sortDefinitions,\n  sortFields,\n} = argv;\n\nconst outputSdl = formatSdl(inputSdl, {\n  sortArguments,\n  sortDefinitions,\n  sortFields,\n});\n\nif (write) {\n  fs.writeFileSync(resolvedPath, outputSdl);\n\n  // eslint-disable-next-line no-console\n  console.log('Target SDL document has been overriden with the formatted SDL.');\n} else {\n  // eslint-disable-next-line no-console\n  console.log(outputSdl);\n}\n"],"file":"index.js"}